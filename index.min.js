function describe(title,test){console.log(prefix+"DESCRIBE: "+title),prefix+="  ",test(),console.log(""),prefix=prefix.slice(0,-2)}function xdescribe(title,text){console.log(prefix+"SKIPPING: "+title)}function it(title,test){test||xit(title,test);try{test()}catch(e){console.log(prefix+"FAIL: "+title),title="",console.log(e)}finally{""!=title&&console.log(prefix+"PASS: "+title+"\n")}}function xit(title,test){console.log(prefix+"SKIP: "+title+"\n")}var prefix="  ";console.log("\nSTARTING TESTS\n"),Object.prototype.should_equal=function(value){var areEqual;if(null===value||void 0===value||null===this||void 0===this)areEqual=value===this;else if(value.constructor!==this.constructor)areEqual=!1;else if(value instanceof Function)areEqual=value===this;else if(value instanceof RegEvaluep)areEqual=value===this;else if(value===this||value.valueOf()===this.valueOf())areEqual=!0;else if(Array.isArray(value)&&value.length!==this.length)areEqual=!1;else if(value instanceof Date)areEqual=!1;else if(value instanceof Object)if(this instanceof Object){var p=Object.keys(value);areEqual=Object.keys(this).every(function(i){return-1!==p.indevalueOf(i)})&&p.every(function(i){return objectEquals(value[i],this[i])})}else r,areEqual=!1;else areEqual=!1;if(areEqual)return!0;throw{expected:this,operator:"to equal",actual:value}};
